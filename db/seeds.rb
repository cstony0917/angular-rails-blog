User.create!([
  {email: "cstony0917@gmail.com", encrypted_password: "$2a$10$4mudcMvSiXVcPpZBHnmUqeHhqlBusLI2pGtS6Kso7nMq6lR1AveC.", reset_password_token: nil, reset_password_sent_at: nil, remember_created_at: "2015-05-23 18:51:50", sign_in_count: 1, current_sign_in_at: "2015-05-23 18:51:50", last_sign_in_at: "2015-05-23 18:51:50", current_sign_in_ip: "1.160.39.35", last_sign_in_ip: "1.160.39.35"}
])
Post.create!([
  {title: "節省開發時間，預防關節炎 guard live reload", content: "在做web開發的朋友們一定會碰到一個問題，那就是每次的修改一定要透過\n\n### 安裝GEM\n\n只給開發與測試環境\n\n``` ruby\ngroup :development, :test do\n  gem \"rack-livereload\"\n  gem 'guard-livereload', '~> 2.4', require: false\nend\n```\n\n接著，安裝GEM，如果有用POWDER的話記得將他restart\n\n```\nbundle install && powder restart\n```", rendered_content: "<p>在做web開發的朋友們一定會碰到一個問題，那就是每次的修改一定要透過</p>\n\n<h3>安裝GEM</h3>\n\n<p>只給開發與測試環境</p>\n\n<pre><code class=\"ruby\">group :development, :test do\n  gem &quot;rack-livereload&quot;\n  gem &#39;guard-livereload&#39;, &#39;~&gt; 2.4&#39;, require: false\nend\n</code></pre>\n\n<p>接著，安裝GEM，如果有用POWDER的話記得將他restart</p>\n\n<pre><code>bundle install &amp;&amp; powder restart\n</code></pre>\n"},
  {title: "RAILS 將資料庫儲存到db seed裡面", content: "參考資料\n<https://github.com/rroblak/seed_dump>\n\n在Gemfile中加入\n\n\tgem 'seed_dump'\n\n或者是直接在終端機輸入\n\n    $ gem install seed_dump\n\n接著就可以使用\n\n    $ rake db:seed:dump\n    \n如果有用heroku的話會發現檔案系統沒辦法直接被存取\n    \n", rendered_content: "<p>參考資料\n<a href=\"https://github.com/rroblak/seed_dump\" target=\"_blank\">https://github.com/rroblak/seed_dump</a></p>\n\n<p>在Gemfile中加入</p>\n\n<pre><code>gem &#39;seed_dump&#39;\n</code></pre>\n\n<p>或者是直接在終端機輸入</p>\n\n<pre><code>$ gem install seed_dump\n</code></pre>\n\n<p>接著就可以使用</p>\n\n<pre><code>$ rake db:seed:dump\n</code></pre>\n\n<p>如果有用heroku的話會發現檔案系統沒辦法直接被存取</p>\n"},
  {title: "RAILS + ANGULARJS 製作BLOG", content: "### 環境設定\n\n產生一個新的rails專案\n\n```\nrails new blog\n```\n\n切換到專案的目錄\n\n```\ncd blog\n```\n\n接著利用powder快速建立rails的開發server （POWDER相關資料）待補\n\n```\npowder link && powder open\n```\n\n參考資料\n\n* [http://pow.cx/](http://pow.cx/)\n* [https://github.com/Rodreegez/powder]()\n\n### 建立系統需要的欄位\n\n產生 post model\n\n```\nrails g model post name:string content:text\n```\n\n執行migrate建立資料庫欄位\n\n```\nrake db:migrate\n```\n\n更改預設路由\n\nconfig/routes.rb\n\n```\n  # You can have the root of your site routed with \"root\"\n  # root 'welcome#index'\n  root 'posts#index'\n```\n\n建立 posts controller\n\n```\nrails g controller posts\n```\n\n設定路由表讓系統知道有post這個RESTFUL資源\n\nconfig/routes.rb\n\n```\n  # Example resource route (maps HTTP verbs to controller actions automatically):\n  #   resources :products\n  resources :posts\n```\n\n\n建立 index action取得文章列表\n\napp/controllers/posts_controller.rb\n\n```\nclass PostsController < ApplicationController\n  def index\n    render :json => Post.all\n  end\nend\n```\n\n建立 show action讀取單一文章內容\n\n``` ruby\n  def show\n    render :json => Post.find(params[:id])\n  end\n```\n\n\n\n\n\n\n\n\n", rendered_content: "<h3>環境設定</h3>\n\n<p>產生一個新的rails專案</p>\n\n<pre><code>rails new blog\n</code></pre>\n\n<p>切換到專案的目錄</p>\n\n<pre><code>cd blog\n</code></pre>\n\n<p>接著利用powder快速建立rails的開發server （POWDER相關資料）待補</p>\n\n<pre><code>powder link &amp;&amp; powder open\n</code></pre>\n\n<p>參考資料</p>\n\n<ul>\n<li><a href=\"http://pow.cx/\" target=\"_blank\">http://pow.cx/</a></li>\n<li><a href=\"\" target=\"_blank\">https://github.com/Rodreegez/powder</a></li>\n</ul>\n\n<h3>建立系統需要的欄位</h3>\n\n<p>產生 post model</p>\n\n<pre><code>rails g model post name:string content:text\n</code></pre>\n\n<p>執行migrate建立資料庫欄位</p>\n\n<pre><code>rake db:migrate\n</code></pre>\n\n<p>更改預設路由</p>\n\n<p>config/routes.rb</p>\n\n<pre><code>  # You can have the root of your site routed with &quot;root&quot;\n  # root &#39;welcome#index&#39;\n  root &#39;posts#index&#39;\n</code></pre>\n\n<p>建立 posts controller</p>\n\n<pre><code>rails g controller posts\n</code></pre>\n\n<p>設定路由表讓系統知道有post這個RESTFUL資源</p>\n\n<p>config/routes.rb</p>\n\n<pre><code>  # Example resource route (maps HTTP verbs to controller actions automatically):\n  #   resources :products\n  resources :posts\n</code></pre>\n\n<p>建立 index action取得文章列表</p>\n\n<p>app/controllers/posts_controller.rb</p>\n\n<pre><code>class PostsController &lt; ApplicationController\n  def index\n    render :json =&gt; Post.all\n  end\nend\n</code></pre>\n\n<p>建立 show action讀取單一文章內容</p>\n\n<pre><code class=\"ruby\">  def show\n    render :json =&gt; Post.find(params[:id])\n  end\n</code></pre>\n"},
  {title: "jbuilder 如何自動展開所有欄位", content: "一開始使用jbuilder的時候並不知道有這個功能，想說要一個一個把欄位解開(extract!)來，GOOGLE了一下，找到下面這種作法\n\n\t  json.merge! p.attributes\n\n[參考連結](http://stackoverflow.com/questions/23027644/how-to-extract-all-attributes-with-rails-jbuilder)\n\n\n範例程式碼\n\n```\njson.array! @posts do |p|\n  json.merge! p.attributes\n  json.content p.content[0..50]\nend\n```", rendered_content: "<p>一開始使用jbuilder的時候並不知道有這個功能，想說要一個一個把欄位解開(extract!)來，GOOGLE了一下，找到下面這種作法</p>\n\n<pre><code>  json.merge! p.attributes\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/questions/23027644/how-to-extract-all-attributes-with-rails-jbuilder\" target=\"_blank\">參考連結</a></p>\n\n<p>範例程式碼</p>\n\n<pre><code>json.array! @posts do |p|\n  json.merge! p.attributes\n  json.content p.content[0..50]\nend\n</code></pre>\n"},
  {title: "使用 redcarpet 解析markdown時如何讓code部分自動產生區塊", content: "render時加上\n\n\tfenced_code_blocks: true\n\n參數即可\n\n```\nmarkdown = Redcarpet::Markdown.new(HTMLwithPygments, fenced_code_blocks: true)\n```", rendered_content: "<p>render時加上</p>\n\n<pre><code>fenced_code_blocks: true\n</code></pre>\n\n<p>參數即可</p>\n\n<pre><code>markdown = Redcarpet::Markdown.new(HTMLwithPygments, fenced_code_blocks: true)\n</code></pre>\n"},
  {title: "防止程式碼在行動裝置被斷行", content: "```\npre {\n  overflow: auto;\n  word-wrap: normal;\n  white-space: pre;\n  code{\n    white-space: pre;\n  }\n}\n```\n\n\n使用Bootstrap的CSS時，會發現在內文貼上程式碼會被斷行，是因為行動裝置的寬度通常較一般大螢幕小很多，個人覺得這樣子非常不美觀，透過上敘的CSS可以讓程式碼不份不會被斷行，而且可以左右scroll。\n\n下圖為修改前後的示範。\n\n![](http://i.imgur.com/GO8IY67.gif)\n", rendered_content: "<pre><code>pre {\n  overflow: auto;\n  word-wrap: normal;\n  white-space: pre;\n  code{\n    white-space: pre;\n  }\n}\n</code></pre>\n\n<p>使用Bootstrap的CSS時，會發現在內文貼上程式碼會被斷行，是因為行動裝置的寬度通常較一般大螢幕小很多，個人覺得這樣子非常不美觀，透過上敘的CSS可以讓程式碼不份不會被斷行，而且可以左右scroll。</p>\n\n<p>下圖為修改前後的示範。</p>\n\n<p><img src=\"http://i.imgur.com/GO8IY67.gif\" alt=\"\"></p>\n"},
